1. Tipe data
int = untuk bilangan bulat (1,2,3....-1,-2,-3)
float = untuk bilangan pecahan (1.1, 1.2, 1.3, -1.1,-1.2)
long = untuk bilangan bulat dengan buffer besar (84232831748972385782)
double = untuk bilangan pecahan dengan buffer besar (1000.1)
const = untuk bilangan tetap dan tidak bisa di ubah

2. fungsi void setup(){} hanya bisa menjalankan code sekali saja
   pinMode(LED_BUILTIN, OUTPUT); → set pin LED bawaan Arduino sebagai output.
   Serial.begin(9600); → memulai komunikasi serial dengan baudrate 9600 bps untuk menampilkan teks ke Serial Monitor.

3. fungsi void loop(){} bisa menjalankan code selama berkali - kali tanpa batas
4. if else logika untuk pengkondisian
5. STA / AP
Apa itu WiFi.mode()?

Fungsi WiFi.mode() digunakan untuk mengatur mode WiFi pada modul ESP.
ESP8266/ESP32 bisa bekerja dalam beberapa mode jaringan:

WIFI_STA → Station mode (sebagai client).
WIFI_AP → Access Point mode (ESP jadi hotspot).
WIFI_AP_STA → Dual mode (bisa jadi AP dan Station sekaligus).
WIFI_OFF → Mematikan WiFi.

6. Beberapa tipe yang umum dipakai di ESP32 WebServer:

1). Text formats
- "text/plain" → teks biasa (default).
- "text/html" → HTML, dipakai kalau kamu mau bikin halaman web dengan tag HTML.
- "text/css" → stylesheet CSS.
- "text/javascript" → kode JavaScript.

2). Structured data
- "application/json" → data JSON, paling sering dipakai untuk komunikasi antar device.
- "application/xml" → data XML.

3). Media formats
- "image/png" → gambar PNG.
- "image/jpeg" → gambar JPEG.
- "image/gif" → gambar GIF.
- "audio/mpeg" → file audio MP3.
- "video/mp4" → video MP4.
(di ESP32 jarang dipakai kecuali untuk streaming sederhana).

4). Others
- "application/octet-stream" → file biner (download data mentah).
- "application/pdf" → file PDF.
- "application/zip" → file ZIP.
- "text/csv" → data CSV.

7. Operator
Operator Perbandingan Sama dengan (==)
Operator Perbandingan Tidak Sama dengan (!=)
Operator Perbandingan Lebih Besar dari (>)
Operator Perbandingan Lebih Besar dari atau Sama dengan (>=)
Operator Perbandingan Kurang dari (<)
Operator Perbandingan Kurang dari atau Sama dengan (<=)
Operator

8. MQTT (Message Queuing Telemetry Transport) adalah protokol komunikasi berbasis publish-subscribe yang dirancang untuk perangkat dengan keterbatasan daya, prosesor, dan koneksi internet. Sering disebut sebagai “bahasa pengantar” antar perangkat pintar, MQTT memainkan peran penting dalam ekosistem Internet of Things (IoT).
9. Cara Kerja MQTT
MQTT menggunakan arsitektur client-server, di mana terdapat tiga komponen utama:

Client: Perangkat yang mengirim atau menerima pesan.
Broker: Server yang mengelola distribusi pesan antar client.
Topic: Jalur virtual untuk mengatur pesan berdasarkan kategori.

Client dapat menjadi publisher (pengirim pesan), subscriber (penerima pesan), atau keduanya. Publisher mengirim pesan ke topik tertentu, dan broker meneruskannya hanya ke subscriber yang sudah berlangganan topik tersebut.

10. Broker MQTT adalah sistem backend yang mengoordinasikan pesan antara klien yang berbeda. Tanggung jawab broker meliputi menerima dan memfilter pesan, mengidentifikasi klien yang berlangganan setiap pesan, serta mengirimi pesan kepada klien. Broker juga bertanggung jawab untuk tugas-tugas lain seperti:

Broker MQTT adalah server perantara yang mengatur semua komunikasi.

Fungsi broker:
- Menerima pesan dari publisher.
- Mendistribusikan pesan ke semua subscriber yang subscribe ke topik tersebut.
- Tanpa broker, publisher tidak bisa langsung kirim ke subscriber → semua wajib lewat broker.
- Mengotorisasi dan mengautentikasi klien MQTT
- Mengirim pesan ke sistem lain untuk analisis lebih lanjut
- Menangani pesan tak terjawab dan sesi klien

MQTT = aturan/protokol komunikasi untuk IoT.
Broker = server pusat yang menjadi perantara antara pengirim (publisher) dan penerima (subscriber).

11. Port standar MQTT
1883 → MQTT tanpa TLS (plaintext).
8883 → MQTT dengan TLS/SSL (MQTTS).
8080 → MQTT lewat WebSocket (tanpa TLS).
8081 → MQTT lewat WebSocket dengan TLS (WSS).

12. Perbedaan MQTT vs MQTTS
MQTT → biasanya jalan di port 1883 (tanpa enkripsi).
MQTTS → versi MQTT yang diamankan dengan TLS/SSL.
Biasanya jalan di port 8883.
